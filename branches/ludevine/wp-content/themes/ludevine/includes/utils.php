<?phpclass Utils {	public static function initCurl($params) {		if(isset($params['url'])) {			$ch = curl_init($params['url']);		}else {			$ch = curl_init();		}		if(isset($params['return']) && $params['return'] == 0) {			@curl_setopt( $ch, CURLOPT_WRITEFUNCTION, 'do_nothing');		} else {			@curl_setopt ( $ch , CURLOPT_RETURNTRANSFER , 1 );		}		if(!isset($params['header']) || empty($params['header'])) {			$header = array(				'Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8',				'Accept-Encoding: gzip, deflate',				'Accept-Language: en-US,en;q=0.5',				'Connection: keep-alive',				'DNT: 1',				'User-Agent: Mozilla/5.0 (Windows NT 6.1; WOW64; rv:19.0) Gecko/20100101 Firefox/19.0',				'X-Requested-With: 	XMLHttpRequest'			);		} else {			$header = $params['header'];		}		if(isset($params['cookie'])) {			$header[] = $params['cookie'];		}		if (isset($params['host']) && $params['host'])      $header[]="Host: ".$params['host'];				//@curl_setopt ( $this -> ch , CURLOPT_VERBOSE , 1 );		@curl_setopt ( $ch , CURLOPT_HEADER , 1 );		if(isset($params['proxy']) && !empty($params['proxy'])) {			curl_setopt($ch, CURLOPT_PROXY, $params['proxy']);		}		if ($params['method'] == "HEAD") @curl_setopt($ch,CURLOPT_NOBODY,1);		@curl_setopt ( $ch, CURLOPT_FOLLOWLOCATION, 1);		@curl_setopt ( $ch , CURLOPT_HTTPHEADER, $header );		if (isset($params['referer']))    @curl_setopt ($ch , CURLOPT_REFERER, $params['referer'] );		//@curl_setopt ( $this -> ch , CURLOPT_USERAGENT, $user_agent);		if (! file_exists(PATH_COOKIE) || ! is_writable(PATH_COOKIE))		{			echo 'Create cookie file...';			$ourFileHandle = fopen(PATH_COOKIE, 'w') or die("can't open file");			fclose($ourFileHandle);		}		if(!isset($params['cookie'])) {			@curl_setopt($ch, CURLOPT_COOKIEFILE, PATH_COOKIE);			@curl_setopt($ch, CURLOPT_COOKIEJAR, PATH_COOKIE);		}		if ( $params['method'] == "POST" )		{			curl_setopt( $ch, CURLOPT_POST, true );			curl_setopt( $ch, CURLOPT_POSTFIELDS, $params['post_fields'] );		}		@curl_setopt ( $ch , CURLOPT_SSL_VERIFYPEER, 0 );		@curl_setopt ( $ch , CURLOPT_SSL_VERIFYHOST, 0 );		@curl_setopt($ch,CURLOPT_ENCODING , "gzip");		if (isset($params['login']) & isset($params['password']))			@curl_setopt($ch , CURLOPT_USERPWD,$params['login'].':'.$params['password']);		@curl_setopt ( $ch , CURLOPT_TIMEOUT, TIME_OUT);		return $ch;	}	public static function getCurrentDateSQL() {		return date('Y-m-d H:i:s');	}	public static function getIp(){		if (isset($_SERVER["HTTP_CLIENT_IP"])){			return $_SERVER["HTTP_CLIENT_IP"];		}		if (isset($_SERVER["HTTP_X_FORWARDED_FOR"])){			return $_SERVER["HTTP_X_FORWARDED_FOR"];		}		if (isset($_SERVER["HTTP_X_FORWARDED"])){			return $_SERVER["HTTP_X_FORWARDED"];		}		if (isset($_SERVER["HTTP_FORWARDED_FOR"])){			return $_SERVER["HTTP_FORWARDED_FOR"];		}		if (isset($_SERVER["HTTP_FORWARDED"])){			return $_SERVER["HTTP_FORWARDED"];		}		return $_SERVER["REMOTE_ADDR"];			}	public static function log($msg,$info='') {		if(is_array($info)) $info = json_encode($info);		$customer_id = '';		global $wpdb;		$query = $wpdb->prepare('INSERT DELAYED INTO `logs`(`time`,`customer_id`,`ip`,`message`,`info`) VALUES (NOW(),%s,%s,%s,%s)',array($customer_id,Utils::getIp(),$msg,$info));		$wpdb->query($query);	}	public static function logException($e) {		$customer_id = '';		global $wpdb;		$query = $wpdb->prepare('INSERT DELAYED INTO `logs`(`time`,`customer_id`,`ip`,`code`,`message`,`info`) VALUES (NOW(),%s,%d,%s,%s,%s)',array($customer_id,Utils::getIp(),$e->getCode(),$e->getMessage(),$e->getTraceAsString()));		$wpdb->query($query);	}	}